
------------------------------- Before | No attribute file-------------------------------

First I was specifying coordinates measurements using numbers, the code was working will on my screen
but is a disaster in other screens.

I had the screen width and height class calculated and stored in a variable in each file

------------------------------- After | with attribute file -------------------------------
I calculated the width and height of my screen and started to write the suitable measurement/myScreenAttribute*UserScreen

I created the attributes file, calculated screen width and height only once on it, stored it and started to use the stored vars.






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
------------------------------- Before | Footer -------------------------------

bottomNavigationBar: BottomAppBar(
      color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            IconButton(
              icon: const Icon(Icons.home, color: Colors.white,size: 48),
              onPressed: () {
                // Add your onPressed logic here
              },
            ),
            IconButton(
              icon: Icon(Icons.favorite, color: Colors.grey[400],size: 48),
              onPressed: () {
                // Add your onPressed logic here
              },
            ),
            IconButton(
              icon: Icon(Icons.search, color: Colors.grey[400],size: 48),
              onPressed: () {
                // Add your onPressed logic here
              },
            ),
            IconButton(
              icon: Icon(Icons.chat, color: Colors.grey[400],size: 48),
              onPressed: () {
                // Add your onPressed logic here
              },
            ),
            IconButton(
              icon: Icon(Icons.account_circle, color: Colors.grey[400],size: 48),
              onPressed: () {
                // Add your onPressed logic here
              },
            ),
          ],
        ),
      ),
------------------------------- After |  -------------------------------

class FooterIcons extends StatefulWidget {
  final Function(int) onCategorySelected;
  const FooterIcons({required this.onCategorySelected});

  @override
  _FooterIconsState createState() => _FooterIconsState();
}

class _FooterIconsState extends State<FooterIcons> {
  int _selectedIndex = -1;
  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      children: [
        FooterIcon(0, icon: Icons.home),
        FooterIcon(1, icon: Icons.favorite),
        FooterIcon(2, icon: Icons.search),
        FooterIcon(3, icon: Icons.chat),
        FooterIcon(4, icon: Icons.account_circle),
      ],
    );
  }

  Widget FooterIcon(int index, {icon}) {
    return IconButton(
        onPressed: () {
          setState(() {
            _selectedIndex = index;
            widget.onCategorySelected(_selectedIndex);
          });

          if (icon == Icons.favorite)
            Navigator.of(context).pushNamed('favourite');
          else if (icon == Icons.account_circle)
            Navigator.of(context).pushNamed('profile');
          else
            ;
        },
        icon: Icon(icon,
            color: _selectedIndex == index ? Colors.white : Colors.grey[400],
            size: 39));
  }
}






///////////////////////////////////////////////////////////////////////
------------------------------- Before | long function -------------------------------

Widget _buildPhoneNumberField(String hint) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        labelTextFields(hint),
        SizedBox(
          height: appSizes.calcH(5.0),
        ),
        InternationalPhoneNumberInput(
          inputDecoration: decorateTextFields(hint),
          onInputChanged: (PhoneNumber number) =>
              _internationalPhoneNumber = number,
          validator: (value) =>
              value!.isEmpty ? 'Please enter your phone number.' : null,
          onSaved: (PhoneNumber number) => _phoneNumber = number.phoneNumber!,
        ),
        SizedBox(
          height: appSizes.calcH(10.0),
        )
      ],
    );
  }
------------------------------- After |  -------------------------------
Widget _buildSignUpPhoneNumberField(String hint) {
    return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [
      labelTextFields(hint),
      SizedBox(
        height: appSizes.calcH(5.0),
      ),
      _buildPhoneNumberField(hint),
    ]);
  }

  Widget _buildPhoneNumberField(String hint) {
    return InternationalPhoneNumberInput(
      inputDecoration: decorateTextFields(hint),
      onInputChanged: (PhoneNumber number) =>
          _internationalPhoneNumber = number,
      validator: (value) =>
          value!.isEmpty ? 'Please enter your phone number.' : null,
      onSaved: (PhoneNumber number) => _phoneNumber = number.phoneNumber!,
    );
  }


///////////////////////////////////////////////////////////////////////
------------------------------- Before | prob_overview file -------------------------------

Text(
    'Anderson',
    style: TextStyle(
        fontFamily: 'Raleway',
        fontWeight: FontWeight.w700,
        fontSize: 16.0,
        color: Color(0xFF252B5C)),
),
Text(
  'Real Estate Agent',
  style: TextStyle(
      fontFamily: 'Raleway',
      fontSize: 11.0,
      color: Color(0xFF53587A)),
),

Text(
    '2 Bedroom',
    style: TextStyle(
        fontFamily: 'Raleway',
        fontSize: 16.0,
        fontWeight: FontWeight.w500,
        color: Colors.grey,
    ),
),

Text(
    '1 Bathroom',
    style: TextStyle(
        fontFamily: 'Raleway',
        fontSize: 16.0,
        fontWeight: FontWeight.w500,
        color: Colors.grey,
    ),
)


Text(
    'Location & Public Facilities',
    style: TextStyle(
        fontFamily: 'Raleway',
        fontSize: 21.0,
        fontWeight: FontWeight.w700,
    ),
),

Text(
    'Cairo, Egypt',
    style: TextStyle(
      fontFamily: 'Raleway',
      fontSize: 16.0,
      color: Colors.grey),
)

Text(
  '2.5 km',
  style: TextStyle(
    fontSize: 16.0,
    fontFamily: 'Montserrat',
    fontWeight: FontWeight.w700,
    color: Color.fromRGBO(37, 43, 92, 1),
  ),
),

Text(
  'from your location',
  style: TextStyle(
      fontSize: 16.0,
      fontFamily: 'Raleway',
      color: Colors.grey),
),



------------------------------- After |  -------------------------------

Widget BuildText({text, size = 14.0, color = null, weight = FontWeight.normal}){
    return Text(
      text,
      style: GoogleFonts.poppins(
        textStyle: TextStyle(
          color: color,
          fontSize: size,
          fontWeight: weight
        )
      )
    );
  }